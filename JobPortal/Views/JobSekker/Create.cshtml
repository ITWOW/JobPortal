@model  JobPortal.Models.JobSeekerViewModel

@{
    ViewBag.Title = "Create";



    var FilePath = Url.Content("~/images/" + (Model.resume ?? "noimage.jpg"));
    var pageHeader = Model.Id > 0 ? "Edit JobSeeker" : "Create JobSeeker";



}


<h2>@pageHeader</h2>

@using (Html.BeginForm("Create",
                        "JobSekker",
                        FormMethod.Post,
                        new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.Id > 0)
                {
                    <input type="hidden" name="@Model.Id" id="@Model.Id" value="@Model.Id" />
                    <input type="hidden" name="ExistingFilePath" id="FilePath" value="@FilePath" />
                }

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div >
                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                <div class="checkbox">
                    Male
                    @Html.RadioButtonFor(model => model.GENDER, "1")
                    Female
                    @Html.RadioButtonFor(model => model.GENDER, "0")


                    @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.ListBoxFor(x => x.SelectedSkillIds, Model.SkillList, new { style = "width:200px" })

            </div>

            @Html.Label("Techologies", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsJava)
                    <label for="@Model.IsJava">Java </label >
                        <div>
                            <br />
                            <div>
                                @Html.CheckBoxFor(model => model.IsDotnet)
                                <label for="@Model.IsDotnet"> Dotnet </label >
                            </div>
                            <br />
                            <div>
                                @Html.CheckBoxFor(model => model.IsSAP)
                                <label for="@Model.IsSAP"> SAP </label >
                            </div>

                            <br />


                        </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @if (Model.Id > 0)
            {

                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DOB, htmlAttributes: new { @class = "form-control", @readonly = true })
                </div>

            }
            else
            {

                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @*<input type="file" name="ImageFile" required /> <input type="date" id="datepicker" name="DOB" class="form-control" value="@Model.DOB" />
                        <input type="date" id="datepicker" name="DOB" value="@Model.DOB">
                            @Html.EditorFor(model => model.DOB, new { @class = "date-picker" }) , @Value = Model.DOB.ToString("dd'/'MM'/'yyyy") })
                                Html.TextBoxFor(model => model.DOB, "{0:MM\\/dd\\/yyyy}"); // display onlly date in textbox

                                @Html.TextBoxFor(model => model.DOB, new { @type = "date", @class = "form-control datepicker", @Value = string.Format("{0:d}", Model.DOB) })
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker", placeholder = " Date Of Birth" } })
                    *@
                    @Html.TextBoxFor(model => model.DOB, new { @type = "date", @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })


                </div>


            }
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Country", new SelectList(ViewBag.CountryEFW, "Value", "Text"))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.resume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.ImageFile, new { type = "file", accept = "image/*,.pdf", onchange = "previewimage()" })
            </div>
            <div class="col-md-2">
                <img id="imguploadPreview" src="@FilePath" style="height:75px" />
            </div>
            <div class="col-md-6"></div>
                @*<img => model.resume, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*<div class= "col-md-2" >
            @Html.TextBoxFor(m => m.ImageFile, new { type = "file", accept = "image/*,.pdf", onchange = "previewimage()" })*@
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Cancel", "Index", "JobSekker", new { @class = "btn btn-default" })


                </div>
            </div>
        </div>
}




@* @Html.DropDownListFor(m => m.Country, Model.CountryList)*@
@*
            @*
                @Html.DropDownList("MySkills", new SelectList(ViewBag.MySkillEnum, "Value", "Text"))
    @Html.DropDownList("MyCountry", new SelectList(Enumerable.Empty<SelectListItem>()))
    @Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.jobs)
    @Html.DropDownList("country", Model.countryList,"Please Select")*@
@*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })*@
                </ div >

@*<div class="form-group">
            @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Skills", new List<SelectListItem>


    {
    new SelectListItem{ Text="ASP.NET MVC", Value = "1" },
    new SelectListItem{ Text="ASP.NET WEB API", Value = "2" },
    new SelectListItem{ Text="ENTITY FRAMEWORK", Value = "3" },
    new SelectListItem{ Text="DOCUSIGN", Value = "4" },
    new SelectListItem{ Text="ORCHARD CMS", Value = "5" },
    new SelectListItem{ Text="JQUERY", Value = "6" },
    new SelectListItem{ Text="ZENDESK", Value = "7" },
    new SelectListItem{ Text="LINQ", Value = "8" },
    new SelectListItem{ Text="C#", Value = "9" },
    new SelectListItem{ Text="GOOGLE ANALYTICS", Value = "10" },
    }, new
    {

    @class = "form-control multiselect-dropdown",
    multiple = "true",
    data_placeholder = "Select Users"
    })

                @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
            </div>
        </div>*@




@section scripts{




    <script type="text/javascript">
        /*  $(document).ready(function () {
              $('input[type=date]').datepicker({
                  changeMonth: true,
                  changeYear: true,
                  yearRange: "-60:-18"
              });

          });*/


        function previewimage() {
            var oFReader = new FileReader();
            oFReader.readAsDataURL(document.getElementById("ImageFile").files[0]);

            oFReader.onload = function (oFREvent) {
                document.getElementById("imguploadPreview").src = oFREvent.target.result;
            };
        }




        /*   $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
        })
         *   $(document).ready(function () {
        $("input[type=file]").click(function () {
            $(this).val("");
        });

               $("input[type=file]").change(function () {

        $("img").attr("src", $(this).val());


               });


           });
      /* $(document).ready(function () {

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            //clearBtn: true,
            todayHighlight: true,
            //todayBtn: true,
            //todayBtn: 'linked',
            orientation: "top left",
            autoclose: true
        });

           });*/

        /*
        $(document).ready(function () {
           /* $('.custom-file-input').on("change", function () {
     var fileName = $(this).val().split("\\").pop();
     $(this).next('.custom-file-label').html(fileName);
});


});*/


    </script>

}




